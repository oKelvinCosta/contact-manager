{"version":3,"sources":["Storage.js","context.js","components/Colors.js","components/layout/Header.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Footer.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Storage","kel","Component","setStorage","key","json","localStorage","setItem","getStorage","JSON","parse","getItem","existStorage","Context","React","createContext","reducer","state","action","type","del","Object","objectSpread","contacts","filter","contact","id","payload","stringify","add","concat","toConsumableArray","update","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","contactsStorage","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Consumer","Colors","primary","secondary","terciary","Header","branding","style","backgroundColor","className","react_router_dom","to","defaultProps","Contact","showContactInfo","onDeleteClick","Axios","delete","t0","_this2","_this$props$contact","cursor","onClick","cursos","marginRight","bind","color","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","rest","objectWithoutProperties","console","log","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","oi","Footer","href","About","match","params","NotFound","Test","title","fetch","then","response","nextProps","nextState","body","EditContact","updContact","put","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd46c243.chunk.js","sourcesContent":["// ------- MODO 1 ---------\r\n// Só para helper mesmo\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Storage extends Component {\r\n  kel = \"kel\";\r\n\r\n  // Inserir dados no Storage\r\n  static setStorage = (key, json) => {\r\n    localStorage.setItem(key, json);\r\n  };\r\n  // Puxar dados do Storage\r\n  static getStorage = key => {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  };\r\n  // Verificar existencia do Storage\r\n  static existStorage = key => {\r\n    return localStorage.getItem(key) ? true : false;\r\n  };\r\n}\r\n\r\n// ------- MODO 2 ---------\r\n\r\n// export default Storage;\r\n\r\n//  Inserir dados no Storage\r\n// const setStorage = (key, json) => {\r\n//   localStorage.setItem(key, json);\r\n// };\r\n// // Puxar dados do Storage\r\n// const getStorage = key => {\r\n//   return localStorage.getItem(key);\r\n// };\r\n// // Verificar existencia do Storage\r\n// const existStorage = key => {\r\n//   return localStorage.getItem(key) ? true : false;\r\n// };\r\n\r\n// export default { setStorage, getStorage, existStorage };\r\n\r\n// ------- MODO 3 ---------\r\n// O melhor modo\r\n\r\n// const helpers = {\r\n//   helper1: function(){\r\n\r\n//   },\r\n//   helper2: function(param1){\r\n\r\n//   },\r\n//   helper3: function(param1, param2){\r\n\r\n//   }\r\n// }\r\n\r\n// export default helpers;\r\n\r\n// import helpers from './helpers';\r\n// and use like this:\r\n\r\n// helpers.helper1();\r\n// helpers.helper2('value1');\r\n// helpers.helper3('value1', 'value2');\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Storage from \"./Storage\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      const del = {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n      Storage.setStorage(\"contacts\", JSON.stringify(del.contacts));\r\n      return del;\r\n\r\n    case \"ADD_CONTACT\":\r\n      const add = {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n      Storage.setStorage(\"contacts\", JSON.stringify(add.contacts));\r\n\r\n      return add;\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      const update = {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n      Storage.setStorage(\"contacts\", JSON.stringify(update.contacts));\r\n      return update;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  // Isso é um state global da classe\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Kelvin Costa\",\r\n        email: \"okelvincosta@gmail.com\",\r\n        phone: \"31 8647-0050\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"John Doe\",\r\n        email: \"jdoe@gmail.com\",\r\n        phone: \"3228-2000\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"John Doe\",\r\n        email: \"jdoe@gmail.com\",\r\n        phone: \"3228-2000\"\r\n      }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    if (!Storage.existStorage(\"contacts\")) {\r\n      // Pega do site\r\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n      // seta local\r\n      this.setState({ contacts: res.data });\r\n      // seta storage\r\n      const json = JSON.stringify(res.data);\r\n      Storage.setStorage(\"contacts\", json);\r\n      // debug\r\n      // console.log(\"storage NÃO existe\");\r\n    } else {\r\n      const contactsStorage = Storage.getStorage(\"contacts\");\r\n\r\n      this.setState({ contacts: contactsStorage });\r\n      // console.log(contactsStorage);\r\n      // console.log(\"storage Existe\");\r\n    }\r\n\r\n    // console.log(\"componentDidMount\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","const Colors = {\r\n  primary: \"#2196f3\",\r\n  secondary: \"#ff1744\",\r\n  terciary: \"#1769aa\"\r\n};\r\n\r\nexport default Colors;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Colors from \"../Colors\";\r\n\r\n// função recebe props pelo parâmetro\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav\r\n      style={{ backgroundColor: Colors.primary }}\r\n      className=\"navbar navbar-expand-sm navbar-dark mb-3 py-0\"\r\n    >\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/test\" className=\"nav-link\">\r\n                <i className=\"fas fa-life-ring\" />\r\n                LifeCycle\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//Seta um prop padrão caso não for setado no componente\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\n// Obrigatprio setar prop ao usar componente\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./contact.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\nimport Colors from \"../Colors\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// RCC cria um component\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // Método asyncrono\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id })\r\n\r\n    try {\r\n      await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  // Quado a função ou variável é setado fora de uma função, é possível chamar ela com this.funcao\r\n\r\n  // Para mudar state precisa do setState()\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <div className=\"header\">\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                  <h4\r\n                    onClick={() =>\r\n                      // Muda o objeto dentro do state que é showContactInfo\r\n                      this.setState({\r\n                        showContactInfo: !this.state.showContactInfo\r\n                      })\r\n                    }\r\n                  >\r\n                    {name}\r\n                  </h4>\r\n                  <i className=\"fas fa-sort-down\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                      className=\"fas fa-pencil-alt\"\r\n                      style={{\r\n                        cursos: \"pointer\",\r\n                        marginRight: \"20px\"\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                  <i\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                    className=\"fas fa-times\"\r\n                    style={{ cursor: \"pointer\", color: Colors.secondary }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {// Novo modo de Ternário com JS e HTML\r\n              showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <b>Email:</b> {email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <b>Phone:</b> {phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nimport Colors from \"../Colors\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          //console.log(\"O que entra de props no value do <Consumer>:\");\r\n          //console.log(value);\r\n          //console.log(\"---------------------\");\r\n\r\n          const { contacts } = value;\r\n          // console.log(\"contacts\");\r\n          // console.log(contacts);\r\n\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-5 mt-5\">\r\n                <span style={{ color: Colors.primary }}>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\"; // npm i classnames\r\n\r\nconst TextInputGroup = ({\r\n  //props\r\n  // pode ser usado props aqui, e lá no return props.name\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n  // Recebe todos os props extras\r\n  ...rest\r\n  // preciso setar o prop q vou receber?\r\n}) => {\r\n  console.log(rest);\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Obrigatoriedades de props a serem recebidos\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Erros\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await Axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear State in form\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n\r\n    // Redireciona para a home\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  // Automatiza os campos para setar os valores no objeto que recebe os valores\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  static defaultProps = {\r\n    name: \"Fred Smith\",\r\n    email: \"fred@gmail.com\",\r\n    phone: \"3228-2000\"\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          // value é o state do context, então o dispatch é do state\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                    //rest\r\n                    oi=\"oi\"\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-info btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport Colors from \"../Colors\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer center\">\r\n        <p>\r\n          Made by{\" \"}\r\n          <a\r\n            className=\"shake-slow shake-constant\"\r\n            href=\"https://www.behance.net/okelvincosta\"\r\n          >\r\n            <b style={{ color: Colors.primary }}>Kelvin Costa</b>\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // props.match.params.id\r\n  // Pega o parâmetro ID\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-primary\">About</span> Contact Manager{\" \"}\r\n        {props.match.params.id}\r\n      </h1>\r\n      <p className=\"lead\">Simple app to manage contacs</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-primary\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  // segundo na ordem automatica\r\n  componentDidMount() {\r\n    console.log(\"componentDidMout...\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(json =>\r\n        this.setState({\r\n          title: json.title\r\n        })\r\n      );\r\n  }\r\n  // primeiro na ordem automatica\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount...\");\r\n  }\r\n  // Ao atualizar state\r\n  componentWillUpdate() {\r\n    console.log(\"componentWillUpdate...\");\r\n  }\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log(\"componentWillReceiveProps\");\r\n  }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <p>{title}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // Pega ID da URL\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Erros\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    // Update Logic Here\r\n\r\n    // Get of Destructuring above\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    // TODO DE ONDE VEM ISSO SE EU NÃO CHAMEI?\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Redireciona para a home\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  // Automatiza os campos para setar os valores no objeto que recebe os valores\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  static defaultProps = {\r\n    name: \"Fred Smith\",\r\n    email: \"fred@gmail.com\",\r\n    phone: \"3228-2000\"\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          // value é o state do context, então o dispatch é do state\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                    //rest\r\n                    oi=\"oi\"\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-info btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport { Provider } from \"./context\";\r\n// Para exportar PROD\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/layout/Header\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // By npm bootstrap\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Test from \"./components/test/Test\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\n\r\nfunction App() {\r\n  //const name = \"Kelvin\";\r\n  //const showHello = true;\r\n  //let math = 10;\r\n\r\n  // Não é preciso colocar aspas(\"\") para mostrar string\r\n  //math = <h4>Valor: {math * 2}</h4>;\r\n\r\n  return (\r\n    <Provider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header branding=\"Contact Manager\" />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/contact/add\" component={AddContact} />\r\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n              <Route exact path=\"/\" component={Contacts} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route exact path=\"/test\" component={Test} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}